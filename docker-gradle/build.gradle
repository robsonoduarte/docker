apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'eclipse'
apply plugin: 'docker'
apply plugin:'application'


mainClassName = "br.com.mystudies.docker.gradle.EchoLibrary"


// see -> http://stackoverflow.com/questions/26916081/how-to-build-a-mixed-java-scala-project
sourceSets.main.scala.srcDir "src/main/java"
sourceSets.test.scala.srcDir "src/test/java"
sourceSets.main.java.srcDirs = []
sourceSets.test.java.srcDirs = []




buildscript {
    repositories { mavenLocal(); jcenter() }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

repositories {
    jcenter()
}


dependencies {
	compile 'org.scala-lang:scala-library:2.11.8'
	testCompile 'org.scalatest:scalatest_2.11:2.2.6'
	testCompile 'junit:junit:4.12'
}




/*
   DOCKER
   For more information about Gradle Docker plguin see:
   https://github.com/Transmode/gradle-docker
*/

docker {
   // the official image to java -> https://hub.docker.com/_/java/
   baseImage 'java:8-jre-alpine'
}


// install bash in Alpine Linux
distDocker{
	runCommand 'apk add --update bash && rm -rf /var/cache/apk/*'
}



// https://docs.gradle.org/current/userguide/application_plugin.html
applicationDefaultJvmArgs = [
	"-server",
	"-Xms56m",
	"-Xmx56m",
	"-Denvironment=ho",
	"-Dcom.sun.management.jmxremote",
	"-Dcom.sun.management.jmxremote.port=1098",
	"-Dcom.sun.management.jmxremote.rmi.port=1098",
	"-Dcom.sun.management.jmxremote.authenticate=false",
	"-Dcom.sun.management.jmxremote.ssl=false",
	"-Djava.rmi.server.hostname=192.168.0.1"
]


